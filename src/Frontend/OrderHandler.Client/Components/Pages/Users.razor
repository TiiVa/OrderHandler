@page "/users"
@using Microsoft.AspNetCore.Components.QuickGrid
@using SortDirection = Microsoft.AspNetCore.Components.QuickGrid.SortDirection
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Admin/User management</PageTitle>

@if (ShowAllUsers)
{
    <Div class="card mb-3">
        <Div class="card-header d-flex flex-row">
            <h5 class="flex-fill">Users</h5>
            <Div class="px-1">
                <select class="form-select form-select-sm" @onchange="OnPageSizeChanged">
                    <option value="5">5</option>
                    <option value="10">10</option>
                    <option value="25">25</option>
                    <option value="50">50</option>
                </select>
            </Div>
            <Button Size="Size.Small" Color="Color.Info" @onclick="ShowAddNewUserView">Add new user</Button>
        </Div>
        <Div class="card-body pb-2 px-0 mb-0">
            <QuickGrid Class="table table-striped m-0"
                       Items="@UserDtoList.AsQueryable()"
                       ItemKey="@(x => x.Id)"
                       Pagination="paginationState">
                <PropertyColumn Title="Id"
                                Property="@(x => x.Id)"
                                Sortable="true"
                                IsDefaultSortColumn="true"
                                InitialSortDirection="SortDirection.Ascending" />
                <PropertyColumn Title="First name"
                                Property="@(x => x.FirstName)"
                                Sortable="true" />
                <PropertyColumn Title="Last name"
                                Property="@(x => x.LastName)"
                                Sortable="true">
                    <ColumnOptions>
                        <div class="d-flex flex-row">
                            <input @bind="lastNameFilter" class="form-control form-control-sm" />
                            <button @onclick="LoadData" class="btn btn-primary btn-sm ms-1">Filter</button>
                        </div>
                    </ColumnOptions>
                </PropertyColumn>
                <PropertyColumn Title="Street address"
                                Property="@(x => x.StreetAddress)" />
                <PropertyColumn Title="Zip code"
                                Property="@(x => x.ZipCode)"
                                Sortable="true" />
                <PropertyColumn Title="City"
                                Property="@(x => x.City)"
                                Sortable="true" />
                <PropertyColumn Title="Country"
                                Property="@(x => x.Country)"
                                Sortable="true" />
                <PropertyColumn Title="Email"
                                Property="@(x => x.Email)" />
                <PropertyColumn Title="Phone"
                                Property="@(x => x.Phone)" />
                <PropertyColumn Title="Role"
                                Property="@(x => x.Role)"
                                Sortable="true" />
                <PropertyColumn Title="Is active"
                                Property="@(x => x.IsActive)" />
                <TemplateColumn>
                    <Dropdown>
                        <DropdownToggle Size="Size.Small" Color="Color.Primary">
                            Edit
                        </DropdownToggle>
                        <DropdownMenu>
                            <DropdownItem @onclick="async() => await ShowUpdateDetailsView(context)">Update</DropdownItem>
                            <DropdownDivider />
                            <DropdownItem @onclick="async () => await OnDelete(context)">Delete</DropdownItem>
                        </DropdownMenu>
                    </Dropdown>

                </TemplateColumn>
            </QuickGrid>
        </Div>
        <Div class="card-footer">
            <Paginator State="paginationState" />
        </Div>
    </Div>

}



@if (ShowUserForm)
{

    <LoadingIndicator @bind-Visible="@_visible">

        <Div Margin="Margin.IsAuto.OnX.Is5.FromTop" Width="Width.Is50">
            <Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom" TextAlignment="TextAlignment.Center">
                Update user profile
            </Heading>

            <Card Shadow="Shadow.Default" Margin="Margin.Is5.FromBottom">
                <CardBody>
                    <EditForm Model="UserToUpdate" OnValidSubmit="() => UpdateUser(UserToUpdate.Id)">
                        <DataAnnotationsValidator />
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                First name
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.FirstName" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.FirstName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Last name
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.LastName" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.LastName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                Street address
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.StreetAddress" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.StreetAddress"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                Zip code
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.ZipCode" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.ZipCode"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                City
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.City" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.City"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                Country
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.Country" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.Country"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Phone
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.Phone" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.Phone"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Your Email
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.Email" Placeholder="name@company.com" Role="TextRole.Email" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.Email"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Password
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdate.Password" Placeholder="********" Role="TextRole.Password" class="form-control" />
                                <ValidationMessage For="() => UserToUpdate.Password"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Field>
                            <FieldLabel>Role</FieldLabel>
                            <select value="@InitialRole" class="form-select" @onchange="OnSelectedChanged">
                                <option value="Admin">Admin</option>
                                <option value="User">User</option>
                            </select>
                        </Field>
                        
                        <Field>
                            <FieldLabel>Active user</FieldLabel>
                            <Check TValue="bool" @bind-Checked="@UserToUpdate.IsActive" />
                        </Field>
                        <Div>
                            <Button Type="ButtonType.Submit" Color="Color.Primary">Update details</Button>
                        </Div>
                    </EditForm>
                </CardBody>
            </Card>
            
        </Div>
    </LoadingIndicator>
    <Div class="row justify-content-center">
        <Div class="col-2">
            <Button Size="Size.Small" Color="Color.Primary" Outline Clicked="GoBackToOverView">Go back to overview</Button>
        </Div>

    </Div>

}

@if (ShowAddNewUserFormIsDisplayed)
{
    <LoadingIndicator @bind-Visible="@_visible">
        <Div Margin="Margin.IsAuto.OnX.Is5.FromTop" Width="Width.Is50">
            <Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom" TextAlignment="TextAlignment.Center">
                Create an account
            </Heading>

            <Card Shadow="Shadow.Default" class="mb-5">
                <CardBody>
                    <EditForm Model="NewUserDto" OnValidSubmit="() => AddNewUser(NewUserDto)" FormName="registerForm">
                        <DataAnnotationsValidator />
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                First name
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.FirstName" />
                                <ValidationMessage For="() => NewUserDto.FirstName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Last name
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.LastName" />
                                <ValidationMessage For="() => NewUserDto.LastName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                Street address
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.StreetAddress" />
                                <ValidationMessage For="() => NewUserDto.StreetAddress"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                Zip code
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.ZipCode" />
                                <ValidationMessage For="() => NewUserDto.ZipCode"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                City
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.City" />
                                <ValidationMessage For="() => NewUserDto.City"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                Country
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Country" />
                                <ValidationMessage For="() => NewUserDto.Country"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Phone
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Phone" />
                                <ValidationMessage For="() => NewUserDto.Phone"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Email
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Email" Placeholder="name@company.com" Role="TextRole.Email" class="form-control" />
                                <ValidationMessage For="() => NewUserDto.Email"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Password
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Password" Placeholder="********" Role="TextRole.Password" class="form-control" />
                                <ValidationMessage For="() => NewUserDto.Password"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-3 text-center">
                            <span class="text-danger">@errorMessage</span>
                        </Div>
                        <Div>
                            <button type="submit" class="btn btn-primary">Create account</button>
                        </Div>
                    </EditForm>
                </CardBody>
            </Card>
        </Div>

    </LoadingIndicator>
    <Div class="row justify-content-center">
        <Div class="col-2">
            <Button Size="Size.Small" Color="Color.Primary" Outline Clicked="GoBackToOverView">Go back to overview</Button>
        </Div>
        
    </Div>
    

}



