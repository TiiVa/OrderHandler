@page "/admin/user_management"
@using Microsoft.AspNetCore.Authorization
@rendermode InteractiveServer
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Admin/User management</PageTitle>

<Div class="row justify-content-center">
    
    <Div TextAlignment="TextAlignment.Center" class="row justify-content-center">
        <Div Margin="Margin.Is5.FromTop.Is5.FromBottom.Is5.FromEnd" class="col-3">
            <EditForm  Model="@UserId" OnValidSubmit="() => ShowCurrentDetails(UserId)" FormName="getById">
                <h6>Enter user id</h6>
                <NumericPicker Margin="Margin.Is2.FromTop.Is2.FromBottom" TextAlignment="TextAlignment.Center" TValue="int" Min="0" @bind-Value="@UserId"/>
                <Button Margin="Margin.Is2.FromTop.Is2.FromBottom" TextAlignment="TextAlignment.Center" Color="Color.Primary" Type="ButtonType.Submit" Outline >Show user details</Button>
            </EditForm>
            <h6>or click &nbsp;<Link Margin="Margin.Is2.FromBottom" Clicked="ShowAllUsers">all users</Link></h6>
        </Div>

        <Div Margin="Margin.Is5.FromTop.Is5.FromBottom.Is5.FromStart" class="col-3">
            <Heading Size="HeadingSize.Is6">Add new user</Heading>
            <Div class="row justify-content-center">
                <Button Margin="Margin.Is2.FromTop.Is2.FromBottom" TextAlignment="TextAlignment.Center" Color="Color.Primary" Outline Clicked="() => AddNewUserFormIsDisplayed()" >
                    Add new user
                </Button>
            </Div>
            
        </Div>
    </Div>
</Div>

@if (DisplayAllUsersForms)
{
    <Container Margin="Margin.Is5.FromTop">
        <Div class="container" Margin="Margin.Is5.FromBottom">
            <Div class="row justify-content-center">
                <Virtualize Items="@UserDtoList">
                    <Card TextAlignment="TextAlignment.Center" Shadow="Shadow.Default" class="col-md-3 justify-content-center d-flex" Margin="Margin.Is3.FromBottom.Is3.FromEnd">
                        <CardBody>
                            @if (@context.FirstName == @context.LastName)
                            {
                                <CardText TextWeight="TextWeight.Bold">@context.FirstName</CardText>
                            }
                            @if (@context.FirstName != @context.LastName)
                            {
                                <CardText TextWeight="TextWeight.Bold">@context.FirstName @context.LastName</CardText>
                            }
                            <CardText>- user id @context.Id</CardText>
                            <br />
                            <CardText>@context.Email</CardText>
                            <CardText>@context.Phone</CardText>
                            <CardText>Role: @context.Role</CardText>
                            <CardText>Password: @context.Password</CardText>
                            <br/>
                            <CardText>Address: <br/> @context.StreetAddress</CardText>
                            <CardText>@context.ZipCode @context.City</CardText>
                            <CardText>@context.Country</CardText>
                            <CardText>Active: @context.IsActive</CardText>
                            <Button Clicked="() => ShowCurrentDetails(context.Id)" Size=Size.ExtraSmall Color="Color.Primary" Margin="Margin.Is3.FromTop.Is3.FromBottom">
                                Update user <Icon Name="IconName.ArrowRight" />
                            </Button>
                        </CardBody>
                    </Card>
                </Virtualize>
            </Div>
        </Div>
    </Container>

}


@if (UpdateOrDeleteFormIsDisplayed)
{

    <LoadingIndicator @bind-Visible="@_visible">

        <Div Margin="Margin.IsAuto.OnX.Is5.FromTop" Width="Width.Is50">
            <Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom" TextAlignment="TextAlignment.Center">
                Update user profile
            </Heading>

            <Card Shadow="Shadow.Default" Margin="Margin.Is5.FromBottom">
                <CardBody>
                    <EditForm Model="UserToUpdateOrDelete.Id" OnValidSubmit="UpdateUserDetails" FormName="registerForm">
                        <DataAnnotationsValidator />
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                First name
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.FirstName" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.FirstName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Last name
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.LastName" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.LastName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                Street address
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.StreetAddress" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.StreetAddress"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                Zip code
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.ZipCode" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.ZipCode"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                City
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.City" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.City"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <Label>
                                Country
                            </Label>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.Country" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.Country"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Phone
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.Phone" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.Phone"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Your Email
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.Email" Placeholder="name@company.com" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.Email"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div Margin="Margin.Is2.FromBottom">
                            <FieldLabel RequiredIndicator>
                                Password
                            </FieldLabel>
                            <FieldBody>
                                <InputText @bind-Value="UserToUpdateOrDelete.Password" Placeholder="********" Role="TextRole.Password" class="form-control" />
                                <ValidationMessage For="() => UserToUpdateOrDelete.Password"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Field>
                            <FieldLabel>Role</FieldLabel>
                            <InputText @bind-Value="UserToUpdateOrDelete.Role" class="form-control"/>
                        </Field>
                        <Field>
                            <FieldLabel>Active user</FieldLabel>
                            <Check TValue="bool" @bind-Checked="@UserToUpdateOrDelete.IsActive" />
                        </Field>
                        <Div>
                            <Button Type="ButtonType.Submit" Color="Color.Primary">Update details</Button>
                        </Div>
                        <Button Margin="Margin.Is1.FromTop" Clicked="ToggleDeleteAccountModal" Color="Color.Danger" Outline>
                            <Icon Name="IconName.Delete" Margin="Margin.Is2.FromEnd" />
                            Delete account
                        </Button>
                    </EditForm>
                </CardBody>
            </Card>

        </Div>
    </LoadingIndicator>

}

@if (DeleteUserModalVisible)
{
    
        <Modal @bind-Visible="@DeleteUserModalVisible">
            <ModalContent Centered>
                <ModalHeader>
                    <ModalTitle>You are about to inactivate an account</ModalTitle>
                    <CloseButton />
                </ModalHeader>
                <ModalBody>
                    <Div Flex="Flex.JustifyContent.Center.AlignItems.Center" Padding="Padding.Is3">
                        <Icon Name="IconName.Delete" IconSize="IconSize.x3" />
                    </Div>
                    <Paragraph TextAlignment="TextAlignment.Center">
                        Are you sure you want to inactivate this account?
                    </Paragraph>
                </ModalBody>
                <ModalFooter Flex="Flex.JustifyContent.Center.AlignItems.Center" Gap="Gap.Is3">
                    <Button Color="Color.Secondary" Outline Clicked="@ToggleDeleteAccountModal">
                        No, cancel
                    </Button>
                    <Button Clicked="DeleteUserProfile" Color="Color.Danger">
                        Yes, I'm sure
                    </Button>
                </ModalFooter>
            </ModalContent>
        </Modal>
   
}
@if (ShowAddNewUserFormIsDisplayed)
{
    <LoadingIndicator @bind-Visible="@_visible">
        <Div Margin="Margin.IsAuto.OnX.Is5.FromTop" Width="Width.Is50">
            <Heading Size="HeadingSize.Is2" Margin="Margin.Is3.FromBottom" TextAlignment="TextAlignment.Center">
                Create an account
            </Heading>

            <Card Shadow="Shadow.Default" class="mb-5">
                <CardBody>
                    <EditForm Model="NewUserDto" OnValidSubmit="AddNewUser" FormName="registerForm">
                        <DataAnnotationsValidator/>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                First name
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.FirstName"/>
                                <ValidationMessage For="() => NewUserDto.FirstName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Last name
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.LastName"/>
                                <ValidationMessage For="() => NewUserDto.LastName"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                Street address
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.StreetAddress"/>
                                <ValidationMessage For="() => NewUserDto.StreetAddress"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                Zip code
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.ZipCode"/>
                                <ValidationMessage For="() => NewUserDto.ZipCode"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                City
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.City"/>
                                <ValidationMessage For="() => NewUserDto.City"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <Label>
                                Country
                            </Label>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Country"/>
                                <ValidationMessage For="() => NewUserDto.Country"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Phone
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Phone"/>
                                <ValidationMessage For="() => NewUserDto.Phone"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Email
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Email" Placeholder="name@company.com" Role="TextRole.Email" class="form-control"/>
                                <ValidationMessage For="() => NewUserDto.Email"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-2">
                            <FieldLabel RequiredIndicator>
                                Password
                            </FieldLabel>
                            <FieldBody>
                                <TextEdit @bind-Text="@NewUserDto.Password" Placeholder="********" Role="TextRole.Password" class="form-control"/>
                                <ValidationMessage For="() => NewUserDto.Password"></ValidationMessage>
                            </FieldBody>
                        </Div>
                        <Div class="mb-3 text-center">
                            <span class="text-danger">@errorMessage</span>
                        </Div>
                        <Div>
                            <button type="submit" class="btn btn-primary">Create account</button>
                        </Div>
                    </EditForm>
                </CardBody>
            </Card>
        </Div>

    </LoadingIndicator>

}
